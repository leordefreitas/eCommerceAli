spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/order
    username: leo
    password: 123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # aqui define o que foi enviado ao consumidor, por meio da funcao payload
        spring.json.type.mapping: orderConfirmation:com.leonardo.order.kafka.OrderConfirmation

server:
  port: 8070

application:
  config:
    # alterado para que ele tenha um comportamento mais rapido, tudo isso,
    # realizado com base no zipkin, entendedo melhor o que a aplicacao esta
    # fazendo e se comportando
    customer-url: http://localhost:8222/api/v1/customers
    payment-url: http://localhost:8222/api/v1/payments
    product-url: http://localhost:8222/api/v1/products

